POST /imperative?colon=minus&embrace=implement&failover=elasticity HTTP/1.1
Host: waf-ce.chaitin.cn
Cache-Control: no-cache
Pragma: no-cache
Accept: */*
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Connection: keep-alive
Content-Length: 8070
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/5.0 (Linux; U; Android 4.4.3; en-us; KFSAWA Build/KTU84M) AppleWebKit/537.36 (KHTML, like Gecko) Silk/3.68 like Chrome/39.0.2171.93 Safari/537.36
Cookie: build=adapt; context=agile; inherit=heterogeneous; SESSIONID=f09495147065e3e5a098902052dfddcab99c90f38d99d48594c414e0c3a5e1b8deac1bf35cf9e27d5f8eab11a7f357e0

dedicated=